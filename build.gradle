/*
 * Copyright Â© 2018-2019 Icbcom
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

plugins {
	id 'java-library'
	id 'maven-publish'
    id 'signing'
	id "io.spring.dependency-management" version "1.0.7.RELEASE"
}

group = 'ru.icbcom.aistdap'
version = '1.0'
sourceCompatibility = '11'

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
javadoc.options.encoding = 'UTF-8'

repositories {
	mavenCentral()
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	archives sourcesJar
	archives javadocJar
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
			artifact sourcesJar
			artifact javadocJar
			pom {
				name = 'Aist Dap Java SDK'
				description = 'A client library for working with Aist Dap resources'
				url = 'https://github.com/icbcom/aistdap-sdk-java'
				licenses {
					license {
						name = 'The Apache License, Version 2.0'
						url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}
				developers {
					developer {
						name = 'Alexey Lisyutenko'
						email = 'alis@icbcom.ru'
						organization = 'Icbcom'
						organizationUrl = 'https://icbcom.ru'
					}
				}
				scm {
					connection = 'scm:git:git://github.com/icbcom/aistdap-sdk-java'
					developerConnection = 'scm:git:git://github.com/icbcom/aistdap-sdk-java'
					url = 'https://github.com/icbcom/aistdap-sdk-java'
				}
			}
		}
	}
	repositories {
		maven {
			def releasesRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
			def snapshotsRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
			url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
			credentials {
				username = ossrhUsername
				password = ossrhPassword
			}
		}
	}
}

signing {
	sign publishing.publications.mavenJava
}

test {
	useJUnitPlatform()
}

dependencyManagement {
	imports {
		mavenBom ('org.springframework.boot:spring-boot-dependencies:2.1.3.RELEASE') {
			bomProperty 'junit-jupiter.version', '5.4.1'
		}
	}
	dependencies {
		dependency 'commons-validator:commons-validator:1.4.0'
		dependency 'commons-io:commons-io:2.6'
	}
}

dependencies {
	api 'org.springframework.hateoas:spring-hateoas'
	api 'org.springframework:spring-web'
	implementation 'commons-validator:commons-validator'
	implementation 'commons-io:commons-io'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.skyscreamer:jsonassert'
	testImplementation 'org.junit.jupiter:junit-jupiter'
	testImplementation 'org.hamcrest:hamcrest-core'
	testImplementation 'org.hamcrest:hamcrest-library'
	testImplementation 'org.exparity:hamcrest-date:2.0.4'
	testImplementation 'org.mockito:mockito-junit-jupiter'
	testImplementation 'org.apache.commons:commons-lang3'
	testImplementation 'org.mock-server:mockserver-netty:5.5.1'
	testImplementation 'com.github.spullara.mustache.java:compiler:0.9.6'
	testRuntimeOnly 'ch.qos.logback:logback-classic'
	testRuntimeOnly 'ch.qos.logback:logback-core'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok:'
}